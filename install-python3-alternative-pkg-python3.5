#!/bin/sh
# install-python3-alternative-pkg-python3.5 -- Install a "python3" alternative
# 
# This script assumes you have installed the debian package `python3.5`,
# optionally with its friend `python3.5-venv`.
#
V="${V:-3.5}"
PRI="${PRI:-100}"
# Directories where "alternative" python$VERSION is found.
ALT="${ALT:-/usr}"
ALT_BIN="${ALT}/bin"
ALT_MAN1="${ALT}/share/man/man1"
# Directories where "official" python3 stuff lives
USR_BIN="${USR_BIN:-/usr/bin}"
USR_MAN1="${USR_MAN1:-/usr/share/man/man1}"

# Set $? to true(0) if package is installed, else false(!0)
package_installed() {
	dpkg -S "$1" >/dev/null 2>&1
}

if [ `id -u` -eq 0 ]; then
	SUDO=""
else
	SUDO="sudo"
fi

cat <<MSG


Running 'update-alternatives' two times. First, to remove any previous 
install of this alternative. Second, to install this alternative. 

If you are not root, this will run under 'sudo' and you will be prompted
for you password. (If you do not have permission to run sudo, give up. 
Installing an alternative requires root privs.)


MSG

#set -x
$SUDO update-alternatives --verbose --remove python3 "$ALT_BIN"/python$V


if [ $? -ne 0 ]; then
	printf "Failed to remove prior version! Are you a sudoer?"
	exit
fi

# 	link 			name 	path 				priority
$SUDO update-alternatives --verbose \
--install "$USR_BIN"/python3	python3 "$ALT_BIN"/python$V		$PRI \
--slave	"$USR_BIN"/2to3		2to3	"$ALT_BIN"/2to3-$V		\
--slave "$USR_BIN"/pdb3		pdb3	"$ALT_BIN"/pdb$V		\
--slave "$USR_BIN"/pydoc3	pydoc3	"$ALT_BIN"/pydoc$V		\
--slave "$USR_BIN"/pygettext3	pygettext3 "$ALT_BIN"/pygettext$V	\
--slave "$USR_BIN"/python3m	python3m "$ALT_BIN"/python${V}m		\
--slave "$USR_MAN1"/python3.1	man.python3 "$ALT_MAN1"/python${V}.1.gz \
--slave "$USR_MAN1"/2to3.1.gz   man.2to3 "$ALT_MAN1"/2to3-${V}.1.gz     \
--slave "$USR_MAN1"/pdb3.1.gz   man.pdb3 "$ALT_MAN1"/pdb3.5.1.gz        \
--slave "$USR_MAN1"/pydoc3.1.gz man.pydoc3 "$ALT_MAN1"/pydoc3.5.1.gz    \
--slave "$USR_MAN1"/pygettext3.1.gz man.pygettext3 "$ALT_MAN1"/pygettext3.5.1.gz \
--slave "$USR_MAN1"/pysetup3.1.gz man.pysetup3 "$ALT_MAN1"/pysetup3.5.1.gz \
--slave "$USR_BIN"/pyvenv	pyvenv	"$ALT_BIN"/pyvenv-$V		\
--slave "$USR_MAN1"/pyvenv3.1.gz man.pyvenv3 "$ALT_MAN1"/pyvenv-${V}.1.gz \

#set +vx

: Not provided by 3.5! --slave "$USR_BIN"/python3m-config python3m-config "$ALT_BIN"/python${V}m-config \
: Not provided by 3.5! --slave "$USR_BIN"/pip3		pip3	"$ALT_BIN"/pip$V		\
: Not provided by 3.5! --slave "$USR_BIN"/idle3	idle3	"$ALT_BIN"/idle$V		\
: Not provided by 3.5! --slave	"$USR_BIN"/f2py3	f2py3	"$ALT_BIN"/f2py$V		\
: Not provided by 3.5! --slave	"$USR_BIN"/easy_install3 easy_install3 "$ALT_BIN"/easy_install-$V \

# NOTE: The python3.5 package does not include python*-config. I wonder why?

cat <<MSG

Running 'update-alternatives' to set the new link-group active, for
verification.

MSG

# Set the link-group active.
$SUDO update-alternatives --set python3 "$ALT_BIN"/python$V

islink() {
	if [ "$1" -ef "$2" ]; then
		: Do nothing, all okay.
	else
		printf "Link '$1' does not point to '$2'\n" >&2
	fi
}

if islink "$USR_BIN/python3"          "$ALT_BIN"/python$V           \
&& islink "$USR_BIN"/2to3             "$ALT_BIN"/2to3-$V            \
&& islink "$USR_BIN"/pdb3             "$ALT"/lib/python$V/pdb.py    \
&& islink "$USR_BIN"/pydoc3           "$ALT_BIN"/pydoc$V            \
&& islink "$USR_BIN"/pygettext3       "$ALT_BIN"/pygettext$V        \
&& islink "$USR_BIN"/python3m         "$ALT_BIN"/python${V}m        \
&& islink "$USR_MAN1"/python3.1       "$ALT_MAN1"/python${V}.1.gz   \
&& islink "$USR_MAN1"/2to3.1.gz       "$ALT_MAN1"/2to3-${V}.1.gz    \
&& islink "$USR_MAN1"/pdb3.1.gz       "$ALT_MAN1"/pdb3.5.1.gz       \
&& islink "$USR_MAN1"/pydoc3.1.gz     "$ALT_MAN1"/pydoc3.5.1.gz     \
&& islink "$USR_MAN1"/pygettext3.1.gz "$ALT_MAN1"/pygettext3.5.1.gz \
&& islink "$USR_MAN1"/pysetup3.1.gz   "$ALT_MAN1"/pysetup3.5.1.gz   \
; then
	printf "python3 alternative install OKAY!\n"
else 
	printf "python3 alternative install FAILED!\n"
fi


HAS_VENV=false
package_installed "python${V}-venv" && HAS_VENV=true

if $HAS_VENV \
&& islink "$USR_BIN"/pyvenv           "$ALT_BIN"/pyvenv-$V          \
&& islink "$USR_MAN1"/pyvenv3.1.gz    "$ALT_MAN1"/pyvenv-${V}.1.gz  \
; then
	printf "python3 (-venv) alternative extras INSTALLED!\n"
else
	printf "python3 (-venv) alternative extras MISSING!\n"
fi

cat <<MSG

The new link-group is still active. You might want to run

    update-alternatives --auto python3 

to set it to auto mode, or run 

    update-alternatives --set python3 /some/particular/version

to manually set a particular configuration.

MSG
